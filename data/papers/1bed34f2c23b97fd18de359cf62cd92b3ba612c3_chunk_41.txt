82 54.32 34.98 5.30
es 13.05 39.79 40.93 22.61 6.67
2.7B
ja 14.72 52.46 51.22 31.28 5.42
JA RU
ru 23.27 50.82 49.98 37.75 4.31
en 12.41 52.82 54.03 31.38 4.51
es 11.69 33.26 34.47 19.04 4.57
6.1B
ja 19.14 51.31 52.07 34.78 5.68
ru 23.66 49.09 49.48 37.44 3.72
Table14: CODEGENresultsonnon-executionmetrics.
D.3 VisualizingMetricCorrelations Figure15: ChrFonpassedandfailedsamples.
Following the discussion in § 6, we visualize
D.4 WhyisExecutionBetter?
the non-execution metric metrics between sam-
ples that pass and fail during execution time. Togivemoreintuitivereasonsfortheadvantages
All experiments use CODE-DAVINCI-002 predic- ofexecution,werandomlysample15casesfrom
tions for evaluation. Figure 13, Figure 14, Fig- eachlanguagesubsetandidentifiedtwomajorben-
ure15,Figure16illustratesthehistogrambetween efits: it tolerates alternative solutions and allows
passed/failed samples using ROUGE, METEOR, executionresultsasoutputs.
ChrF,andCodeBLEUmetrics,respectively.
Alternative Code Implementation Probably
EN ES
the greatest advantage of execution is it only re-
quirescorrectexecutionresults,withoutlimitations
onalternativemethods,asinFigure17.
Directly Generating Execution Results An-
otherinterestingcategoryisdirectlygeneratingthe
JA RU
codeexecutionresultsinsteadoftheimplementa-
tion steps. This often happens to simple coding
queries such as basic string manipulation, where
predictingtheresultsmightcostthemodelsimilar
effortstogettingtheprogrammaticsolutions.
InFigure18,insteadofthestringdecodingpro-
Figure13: ROUGEonpassedandfailedsamples.
gram, themodeldirectlyoutputstheresultstring
“JLK”.
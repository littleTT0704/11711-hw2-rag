 of Machine Learning
space of learning algorithms, and subsumes a wide range of known algorithms in a unified manner. The
simplicity, modularity, and generality of the framework is particularly appealing not only from the theoretical
perspective but also because it offers guiding principles for mechanical design of algorithmic approaches to
challenging problems, in the presence of diverse experience, and hence serves as an important step toward the
goal of panoramic learning. In this section, we discuss the use of the standard equation to drive systematic
design of new learning methods, which in turn yield various algorithmic approaches to problems in different
application domains.
9.1. Combining Rich Experience
As one of the original motivations for the standardization, the framework allows us to combine together all
different experience to learn models of interest. Learning with multiple types of experience is a necessary
capability of AI agents to be deployed in a real dynamic environment and to improve from heterogeneous
signals in different forms, at varying granularities, from diverse sources, and with different intents (e.g.,
adversaries). Such versatile learning capability is best exemplified by human learning—for instance, we learn a
new language by reading and hearing examples, studying grammars and rules, practicing and interacting with
others, receiving feedback, associating with prior languages we already mastered, and so forth. To build a
similar panoramic-learning AI agent, having a standardized learning formalism is perhaps an indispensable
step.
The standard equation we have presented is naturally designed to fit the needs. In particular, the experience
function provides a straightforward vehicle for experience combination. For example, the simplest approach is
perhaps to make a weighted composition of multiple individual experience functions:
f(t) = ∑iλ if i(t), (9.1)
where each f characterizes a specific source of experience, and λ > 0 is the respective weight. One can
i i
readily plug in arbitrary available experience, such as data, logical rules, constraints, rewards, and auxiliary
models, as components of the experience function.
With the SE, designing an approach to a problem thus boils down to choosing and formulating what experience
to use depending on the problem structure and available resources, without worrying too much about how to
use the experience. This provides a potentially new modularized and repeatable way of producing ML
approaches to different problems, as
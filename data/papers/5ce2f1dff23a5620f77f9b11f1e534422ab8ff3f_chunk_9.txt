 progress tracker p
relevant?”forobjects. Usingthepre-trainedQAmodel (initialized at 1) that indicates the sub-task the agent
M
ME
(i Pn,a oz )er fo o- rsh eo at chm oa bn jn ee cr t, owe anco dm µput =e s Mcore (Pµ
o,i
r=
)
i cs onc tu er xr ten at sly thw eor lk asin tg do sn te( ps sp) o.
f
W the
e
t ah ge en ntco om bsp eo rvse att ioh ne
E o i i ri E o i
for each receptacle r in observation at every step. µ
j 1Note that the current system design does not allow
representsthebeliefscoreofwhetherthecommon-sense re-visiting finished sub-tasks, so the agent has no means to
QA model believes the object/receptacle is relevant to recover if it undoes its previous sub-task at test time.
Plan, Eliminate, and Track
for the current sub-task and the question as “Did you keys as action scores for the policy π (Eq. 5).
finish the task of s?”. For efficiency, we set d :=
p
min(d + 1,3) at each step. Note that d is reset to Ht =avg Embed(Oj) (1)
j∈[1,t−1]
1 whenever the progress tracker updates. Hence, the HA =(cid:2) Embed(at),...,Embed(at)(cid:3) (2)
templateP =concat(Ot−d,...,Ot−1,“Didyoufinish 1 n
a
Q=M
(cid:0) Embed(T),Ht,Embed(Ot),HA(cid:1)
(3)
the task of s?”). We feed P to a pre-trained zero- Q
p a
shot QA model M and compute the probability of K =M
(cid:0) Embed(T),Ht,Embed(Ot),Embed(at)(cid
. imizes the
response time by parallelizing the execution of each individual question, the develop-
ment system is optimized to achieve high throughput by processing many questions
76 AI MAGAZINE
in parallel and running each question in a single thread. Both versions include the
statistical source expansion approach described in this thesis.
noisicerP
3.4. QUESTION ANSWERING SYSTEMS 33
With source expansion, the best-performing version of Watson that was available
at the time of the competition in early 2011 achieves 71% accuracy on a random
sample of 3,508 regular Jeopardy! questions, and 51% accuracy on 788 randomly
selected Final Jeopardy! questions. If only questions with high-confidence answers
are attempted in the regular Jeopardy! rounds, the system has a precision of 88%
while answering about 70% of the questions. On a set of 444 factoid questions from
the TREC 11 evaluation, Watson has an accuracy of 64% when only utilizing local
corpora that were expanded with web data in a prepocessing step, and 69% when per-
forminglivewebsearchesinadditiontolocalsearches. Asacomparison, OpenEphyra
answers the same set of questions with 49% accuracy using live web search results.
Without source expansion, Watson’s performance is significantly lower. QA accuracy
decreases from 71% to 66% on regular Jeopardy! questions and from 51% to 45%
on Final Jeopary! questions. If Watson only attempts 70% of the regular Jeopardy!
questions based on its confidence estimates, it performs at 84% precision without
source expansion, compared to 88% when using expanded sources. On TREC 11,
Watson’s accuracy decreases from 64% to 59% if source expansion is turned off.
As with most natural language processing projects, the DeepQA research team
initially realized large performance gains, but as Watson became more effective at
the Jeopardy! task, the improvements grew smaller. The reason for the diminishing
returns is that different algorithms often address similar issues, and the incremental
performance gains of new methods can depend on the order in which they are added
to a system. Source expansion was first integrated in Watson in the summer of 2009
and is responsible for much of the performance difference between Watson v0.5 and

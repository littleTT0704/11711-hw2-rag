 T of entity state tracking are a
2001): determines whether Gˆ and G are iso- sequenceofactionsinnaturallanguageaboutapar-
morphicbasedontheirstructure,disregarding ticulartopic(e.g.,photosynthesis)andacollection
thetextualcontentofnodes; ofentities(e.g.,water). Thegoalistopredictthe
• Graph size: average number of nodes and stateofeachentityaftertheexecutionsofanaction.
edges, (∣G(V)∣,∣G(E)∣,∣Gˆ (V)∣,∣Gˆ (V)) WeusethePROPARAdataset(Dalvietal.,2018)as
and the average degree (d(G(V))), where thetest-bedforthistask.
the high-level goal is for Gˆ to have as close WeconstructthePythoncodeG c asfollows,and
measurestoG aspossible. an example is shown in Figure 3. First, we de-
fine the main function and list all n actions as
Edge Prediction metrics For the edge predic- commentsinsidethemainfunction. Second,we
tion task, the set of nodes is given, and the goal createk variablesnamedasstate_kwherek is
is to predict the edges between them. Follow- thenumberofparticipantsofthetopic. Theseman-
ingSakaguchietal.(2021),wemeasureprecision, ticsofeachvariableisdescribedinthecomments
def main():
# init
# roots absorb water from soil
# the water flows to the leaf
Action Entity # state_0 tracks the location/state water
# state_1 tracks the location/state light
water light CO2 # state_2 tracks the location/state CO2
def init():
Initialstates soil sun - state_0 = "soil"
state_1 = "sun"
Rootsabsorb state_2 = None
waterfromsoil roots sun? def roots_absorb_water_from_soil():
state_0 = "roots"
Thewaterflows state_1 = "sun"
state_2 = "UNK"
totheleaf leaf sun?
def water_flows_
 class attribute or descriptive comment, and en- bygeneratingthedefinitionforNodeobjectsand
coding the structure G using standard constructs theirdependenciesforthegoalmakehotgreentea.
forrepresentingstructureincode(e.g.,hashmaps,
objectattributes)orfunctioncalls. Thegoalhereis class Tree:
tocomposePythoncodethatrepresentsa(T,G) goal = "make hot green tea."
pair,butretainsthesyntaxandcodeconventionsof
typicalPythoncode. def __init__(self):
Forexample,forthescriptgenerationtask,we # generate
convert the (T,G) pair into a Tree class (Fig-
ure 1b). The goal T is added as class attribute
Figure2: COCOGENusesapromptconsistingofk(5-
(goal), and the script G is added by listing
10) Python classes. During inference, the test input is
the nodes and edges separately. We first in-
convertedtoapartialclass,asshownabove,appended
stantiate the list of nodes as objects of class to the prompt, and completed by a code generation
Node. Then, the edges are added as an attribute modelsuchasCODEX.
children for each node (Figure 1b). For ex-
ample, we instantiate the node “Take out sev- Inourexperiments,weusedCODEX(Chenetal.,
eral plates” as take_out_several_plates 2021a) and found that it nearly always generates
= Node(), and add it as a child of the node syntactically valid Python. Thus, the generated
code can be easily converted back into a graph wherethemodelonlyhasaccesstoafewex-
andevaluatedusingthedataset’sstandard,original, amples,fine-tunedmodelsobservetheentire
metrics. AppendixFlistssamplepromptsforeach trainingdataofthedownstreamtask.
ofthetasksweexperimentedwith.
Choice of prompt We created the prompt p by
3 Evaluation randomlysamplingk examplesfromthetraining
set. Asallmodelshaveaboundedinputsize(e.g.,
Weexperimentwiththreediversestructuredcom- 4096 tokens for
viXra
PublishedasaconferencepaperatICLR2023
c
n from pygments import *
Generate HTML with python
code = ‘print(“reading docs”)’
syntax highlighting for Re!iever Genera"r s = highlight(code, PythonLexer(),
“print(‘reading docs’)”
HtmlFormatter())
Pygment is a generic syntax highlighter A formatter takes the token stream and writes it d 3
d to an output file …
1
A lexer splits the source into tokens, fragments …
class HtmlFormatter
Format tokens as HTML 4 <span> tags with …
class PythonLexer
For Python source code d
2
𝒟
Figure1: DocPrompting: givenanNLintent(cid:13)n,theretrieverretrievesasetofrelevantdocumenta-
tion{(cid:13)d1,(cid:13)d2,(cid:13)d3}fromadocumentationpool(cid:13)D. Then,thegeneratorgeneratesthecode(cid:13)c based
ontheNLandretrieveddocs. DocPromptingallowsthemodeltogeneralizetopreviouslyunseen
usagesbyreadingthosedocs. ItalicbluehighlightsthesharedtokensbetweenNLanddocs;Bold
showssharedtokensbetweendocsandthecodesnippet.
weproposeDocPrompting: acodegenerationapproachthatlearnstoretrievecodedocumentation
beforegeneratingthecode. AnoverviewofourapproachisillustratedinFigure1: First,adocument
retrieverusestheNLintent(cid:13)n toretrieverelevantcodedocumentation{(cid:13)d1,(cid:13)d2,(cid:13)d3}fromadocumen-
tationpool(cid:13)D. Then,acodegeneratorusesthesedocsinitsprompttogeneratethecorresponding
code(cid:13)c. Thedocumentationpoolservesasanexternaldatastorethatcanbeupdatedfrequently
withnewcontents
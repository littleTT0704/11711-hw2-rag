521
Algorithm1:BaseVelocityControllerPseudocode
Require: Goalposep ∈SE(2),Currentposep∈SE(2)
g
1: Computeposeerrore =p −p∈SE(2)
p g
2: Computeheadingerrorθ =errorbetweenrobotheadingand
e
directionofthegoallocation(directionoftranslationalportion
ofe )
p
3: iftranslationalpartofe <d then
p threshold
4: v =0
l
5: v :computedfromtherotationalpartofe usingatrape-
r p Figure 5: Exploring a real-world apartment during testing.
zoidalvelocityprofile
TherobotusesDetic(Zhouetal.2022)toperceivetheworld
6: else
andupdatea2Dmap(center)whichcaptureswhereit’sseen
7: v :computedfromθ usingatrapezoidalvelocityprofile
r e
8: v :computedfromthetranslationalpartofe usingatrape- relevantclasses,andwhichobstaclesexist;detectionsaren’t
l p
zoidalvelocityprofile always reliable, especially given a large and changing vo-
9: Reduce linear velocity based on heading error v = cabulary of objects that we care about. In the HomeRobot
l
v l0sin(2θ e) stack, we provide a variety of tools for visualizing and im-
10: Compute e˙ l = f l(v l), the rate at which heading error in- plementingpolicies,includingintegrationofRVIZ(right).
creasesduetolinearvelocity
11: Computee˙ = f (v ),therateatwhichheadingerrorde-
r r r
creasesduetoangularvelocity
Frontier Exploration Policy. We explore the environ-
12: ife˙ < 1e˙ then
l 2 r mentwithaheuristicfrontier-basedexplorationpolicy(Ya-
13: Limitlinearvelocityv sothate˙ = 1e˙
l l 2 r mauchi 1997). This heuristic selects as the goal the point
14: endif
cl
purpose architectures. For a large part of SNLP, capabilities provided by
general-purpose supercomputers (such as floating-point arithmetic and sophisticated memory-
management schemes) are not required. For instance, many common paradigms — such as
dynamic time warp, table-driven Viterbi decoding for vector-quantized input, and connectionist
processing — use fixed-point arithmetic with moderate word widths (8-16 bits). Reduced-
precision arithmetic helps reduce the silicon area required for implementation, permits high-
bandwidth communication in pin-limited circuits, and simplifies interprocessor communication
requirements. These factors are particularly important for tasks common in SNLP, where data
movements commonly overwhelm computations required. In addition, virtual memory and
November 23,1992 24
elaborate operating systems are not needed, thereby further reducing the complexity and cost of
such systems.
The principal restriction of such a specialized system is its inflexibility. While some
researchers argue that a completely special-purpose machine is adequate, substantial changes on
the algorithms may be required for these machines. The challenge for architects in the speech
and natural language area is, therefore, to design machines that are sufficiently flexible and pro­
grammable, and yet have a high performance gain over the rapidly advancing general-purpose
machines. Such machines have been built and used successfully for limited sub-domains in
speech processing (multi-layer perceptron training and time-synchronous Viterbi decoding).
More research needs to be conducted in developing architecture-independent computational
models (such as object-oriented models) and algorithms, and methods for mapping these algo­
rithms on general-purpose as well as special-purpose computers.
4) Heterogeneous architectures and hybrid systems. Spoken-language systems generally
require a heterogeneous architecture, involving signal processing, numeric processing for the
search algorithms during recognition, and symbolic processing to support the knowledge-based
discourse and reasoning components of the system. In addition, in order to carry on real-time
conversations with users, a real-time system is needed for processing the input as it is received,
performing incremental signal processing, recognition, understanding (and even answer genera­
tion and speech synthesis). This creates an interesting challenge for high-performance architec­
tures, requiring heterogeneous, parallel, and pipelined processing. Moreover
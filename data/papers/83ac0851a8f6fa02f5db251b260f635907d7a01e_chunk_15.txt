/pm 53.72 44.64 13.85
beforeterminatingthealgorithm,andweplottheresulting logit mean*pm 54.78 44.70 15.91
successrateandSPLinFigure6. Oneimportantfindingis logprob mean*pm 55.04 43.70 17.45
thatthemodel’ssuccessrate, thoughincreasingwithmore logit sum*pm 50.95 41.28 20.25
nodesexpanded,doesnotmatchtheoracle’srate,i.e.,asthe logprob sum*pm 56.15 43.19 21.55
agent expands 40 nodes, it has visited the true target node
Table3.Performanceofdifferentfusionmethodsforscoringpar-
over 90% of the time but cannot recognize it as the final
tialtrajectories.Testedonthevalidationunseenset.
destination. Thismotivatesananalysisoftheutilityofour
globalinformationandwhetheritistrulypredictive(Table
trajectory achieves an SR score of 56.66. Note although
4),whichweinvestigatefurtherin§4.3.
allinformationoriginateswiththesamehiddenvectors,the
4.3.LocalandGlobalScoring valuescomputedandhowtheyareaggregatedsubstantially
affect performance. Overall, we find that summing unnor-
As noted in §2.3, core to our approach are two queues, malized logits (the 3rd row) performs the best considering
frontier queue for expansion and the candidate queue for its outstanding SR. This suggests that important activation
proposing the final candidate. Each queue can use arbi- informationinthenetworkoutputsisbeingthrownawayby
traryinformationforscoring(partial)trajectories. Wenow normalizationandthereforediscardedbyothertechniques.
comparetheeffectsofcombiningdifferentsetofsignalsfor ThebottompartofTable3exploreswaysofcombining
scoringeachqueue. localandglobalinformationproviders.Thesearemotivated
bybeam-rescoringtechniquesinpreviouswork(e.g., mul-
Fusion methods for scoring partial trajectories An tiplying by the normalized progress monitor score). Cor-
ideal model would include as much global information as rect
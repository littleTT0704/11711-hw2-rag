candidate:
long specialFilter( long specialFilter(
std::vector<long> nums) { std::vector<long> nums) {
// Write your code here long count = 0;
long sum = 0; for(int i=0; i<nums.size(); i++){
for(int i=0; i<nums.size(); i++){ if(nums[i] >= 10) {
std::string str = int last = nums[i] % 10;
std::to_string(nums[i]); int first = nums[i];
long firstDigit = nums[i] / while(first >= 10) {
abs(nums[i]); first /= 10;
long lastDigit = nums[i]%10; }
if(nums[i] > 10 && if (last % 2!= 0 &&
(firstDigit % 2 == 1 || first % 2!= 0) {
lastDigit % 2 == 1)){ count++;
sum++; }
} }
} }
return sum; return count;
} }
(c)PreferredbychrF. (d)PreferredbyCodeBERTScore.
Figure 10: An example in HumanEval-C++, in which chrF assigns a higher score to Figure 10(c) which is not
functionallyequivalenttothereference(Figure10(b)),whileCodeBERTScoreassignsahigherscoretothefunc-
tionallycorrectcandidateFigure10(d).

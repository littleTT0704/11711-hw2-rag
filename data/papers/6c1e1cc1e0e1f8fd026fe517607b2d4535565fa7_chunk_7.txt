., 2022; Zhou et al.,
2022;Wangetal.,2022b).
CraftingpromptsforPAL Inourexperiments,welever-
agedthepromptsofexistingworkwheneveravailable,and
3.Program-aidedLanguageModels
otherwiserandomlyselectedthesamenumber(3-6)ofex-
In a Program-aided Language model, we propose to gen- amples as previous work for creating a fixed prompt for
erate the thoughts t for a given natural language prob- everybenchmark. Inallcases,weaugmentedthefree-form
lemxasinterleavednaturallanguage(NL)andprogram- textpromptsintoPAL-styledprompts,leveragingprogram-
ming language (PL) statements. Since we delegate the mingconstructssuchasforloopsanddictionarieswhen
solution step to an interpreter, we do not provide the fi- needed. Generally,writingPALpromptsiseasyandquick.
nal answers to the examples in our prompt. That is, ev-
We also ensure that variable names in the prompt mean-
ery in-context example in PAL is a pair (cid:104)x i, t i(cid:105), where
ingfully reflect their roles. For example, a variable that
t =[s,s,...,s ]witheachs ∈NL∪PL,asequence
j 1 2 N i describesthenumberofapplesinthebasketshouldhavea
oftokensineitherNLorPL.Thecompletepromptisthusp
namesuchasnum apples in basket. Thiskeepsthe
≡(cid:104)x ·t (cid:105)(cid:107)(cid:104)x ·t (cid:105)(cid:107)...(cid:107)(cid:104)x ·t (cid:105).
1 1 2 2 k k generated code linked to the entities in the question. In
Given a test instance x, we append it to the prompt, Section6weshowthatsuchmeaningfulvariablenamesare
test
and p(cid:107)x is fed to the LM. We let the LM generate a critical. Notably
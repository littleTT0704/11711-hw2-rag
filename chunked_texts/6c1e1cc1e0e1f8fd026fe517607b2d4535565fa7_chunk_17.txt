 text-davinci 2. PAL−var –thePALpromptwithoutintermediate
−comment
series. Figure 8 shows the following interesting re- NL comments and with variable names substituted
sults: when the base LM’s “code modeling ability” is withrandomcharacters.
weak(usingtext-davinci-001),COTperformsbetter
than PAL. However, once the LM’s code modeling abil- TheresultsareshowninFigure9. InCOLOREDOBJECTED
ityissufficientlyhigh(usingtext-davinci-002and andDATE,removingintermediateNLcommentsbutkeep-
text-davinci-003),PALoutperformsCOT,andPAL ingmeaningfulvariablenames(PAL −comment)–slightlyre-
text-davinci-003performsalmostasPAL code-davinci-002. ducestheresultscomparedtothefullPALprompt,butitstill
ThisshowsthatPAL isnotlimitedtoLMsofcode,butit achieveshigheraccuracythanthebaselinesCOT.Remov-
can work with LMs that were mainly trained for natural ingvariablenamesaswell(PAL−var )furtherdecreases
−comment
language,iftheyhaveasufficientlyhighcodingability. accuracy, and performs worse than COT. Since variable
nameshaveanimportantpartincodequality(Gellenbeck
IsPALbetterbecauseofthePythonpromptorbecause & Cook, 1991; Takang et al., 1996), meaningful variable
of the interpreter? We experimented with generating namesareonlyexpectedtoeasereasoningforCodex,which
Pythoncode,whilerequiringtheneuralLMto“execute”it wastrainedonmostlymeaningfulnames,aswasalsofound
aswell, withoutusinganinterpreter, followingNyeetal. byMadaanetal.(2022).
(2021);Madaanetal.(2022). Wecreatedpromptsthatare
similartoPAL’s,exceptthattheydoincludethefinalanswer.
7.RelatedWork
Thisresultedina23.2solverateon GSM8K,muchlower
thanPAL(72.0),andon